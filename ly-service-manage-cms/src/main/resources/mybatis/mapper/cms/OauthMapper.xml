<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lingyun.manager_cms.dao.OauthMapper" >
  <resultMap id="BaseResultMap" type="com.lingyun.framework.domain.Oauth" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="alias" property="alias" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="info" property="info" jdbcType="VARCHAR" />
    <result column="config" property="config" jdbcType="VARCHAR" />
    <result column="apply" property="apply" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="INTEGER" />
    <result column="ordid" property="ordid" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="BIT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, alias, name, info, config, apply, create_time, ordid, status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from qs_oauth
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from qs_oauth
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lingyun.framework.domain.Oauth" >
    insert into qs_oauth (id, alias, name, 
      info, config, apply, 
      create_time, ordid, status
      )
    values (#{id,jdbcType=INTEGER}, #{alias,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{info,jdbcType=VARCHAR}, #{config,jdbcType=VARCHAR}, #{apply,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=INTEGER}, #{ordid,jdbcType=INTEGER}, #{status,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lingyun.framework.domain.Oauth" >
    insert into qs_oauth
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="alias != null" >
        alias,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="info != null" >
        info,
      </if>
      <if test="config != null" >
        config,
      </if>
      <if test="apply != null" >
        apply,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="ordid != null" >
        ordid,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="alias != null" >
        #{alias,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="info != null" >
        #{info,jdbcType=VARCHAR},
      </if>
      <if test="config != null" >
        #{config,jdbcType=VARCHAR},
      </if>
      <if test="apply != null" >
        #{apply,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=INTEGER},
      </if>
      <if test="ordid != null" >
        #{ordid,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lingyun.framework.domain.Oauth" >
    update qs_oauth
    <set >
      <if test="alias != null" >
        alias = #{alias,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="info != null" >
        info = #{info,jdbcType=VARCHAR},
      </if>
      <if test="config != null" >
        config = #{config,jdbcType=VARCHAR},
      </if>
      <if test="apply != null" >
        apply = #{apply,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=INTEGER},
      </if>
      <if test="ordid != null" >
        ordid = #{ordid,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lingyun.framework.domain.Oauth" >
    update qs_oauth
    set alias = #{alias,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      info = #{info,jdbcType=VARCHAR},
      config = #{config,jdbcType=VARCHAR},
      apply = #{apply,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=INTEGER},
      ordid = #{ordid,jdbcType=INTEGER},
      status = #{status,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>